name: Lint
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

env:
  CARGO_TERM_COLOR: always

permissions:
  actions: write
  contents: read
  pull-requests: write

jobs:
  decision:
    name: Decide Jobs to Run
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Rust Changes
        id: rust
        uses: tj-actions/changed-files@v24
        with:
          files: |
            crates/**/*.rs
            Cargo.toml
            Cargo.lock

      - name: React Changes
        id: react
        uses: tj-actions/changed-files@v24
        with:
          files: |
            ui/**

    outputs:
      rust: ${{ steps.rust.outputs.any_changed }}
      react: ${{ steps.react.outputs.any_changed }}

  rust-lint:
    needs: decision
    if: ${{ needs.decision.outputs.rust == 'true' }}
    name: Rust Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: ./.github/actions/rust
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check formatting
        run: |
          cargo fmt --check

      - name: Check Cargo.toml formatting
        run: npx @taplo/cli@0.5.2 format --check

      - name: Check licenses
        uses: EmbarkStudios/cargo-deny-action@v1
        with:
          command: check licenses

  rust-clippy:
    needs: decision
    if: ${{ needs.decision.outputs.rust == 'true' }}
    name: Rust Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: ./.github/actions/rust
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Clippy
        run: cargo clippy -- -D warnings

  react-lint:
    needs: decision
    if: ${{ needs.decision.outputs.react == 'true' }}
    name: React Lint
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ui
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: ./.github/actions/node
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Formatting
        run: pnpm run format:check
